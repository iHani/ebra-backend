services:
  db:
    image: postgres:16
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ebra_db

  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - "6379:6379"

  prisma:
    build: .
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/ebra_db
    volumes:
      - .:/app
    command: npx prisma generate && npx prisma migrate deploy

  api:
    build: .
    depends_on:
      - db
      - prisma
      - redis
      - kafka
      - zookeeper
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/ebra_db
      AI_PROVIDER_URL: https://provider.com/api/v1/calls
      CALLBACK_BASE_URL: http://api:3000/api/v1
      REDIS_HOST: redis
      PORT: 3000
    command: npm run dev

  worker:
    build: .
    depends_on:
      - db
      - prisma
      - redis
      - kafka
      - zookeeper
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/ebra_db
      AI_PROVIDER_URL: https://provider.com/api/v1/calls
      CALLBACK_BASE_URL: http://api:3000/api/v1
      REDIS_HOST: redis
    command: npm run worker

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes

  kafka:
    image: bitnami/kafka:latest
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka_data:/bitnami/kafka
volumes:
  kafka_data:

